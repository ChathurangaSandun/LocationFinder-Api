// <auto-generated />
using LocationFinder.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocationFinder.Api.Migrations
{
    [DbContext(typeof(NearmeDataContext))]
    [Migration("20191129115239_addimageurl")]
    partial class addimageurl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocationFinder.Api.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("nearme.organization");
                });

            modelBuilder.Entity("LocationFinder.Api.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ImageUri");

                    b.Property<string>("Mobile");

                    b.Property<string>("Name");

                    b.Property<long>("OrganizationId");

                    b.Property<long>("PointLocatioId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PointLocatioId")
                        .IsUnique();

                    b.ToTable("nearme.person");
                });

            modelBuilder.Entity("LocationFinder.Api.Models.PointLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Latitude");

                    b.Property<float>("Longtitude");

                    b.HasKey("Id");

                    b.ToTable("nearme.pointlocation");
                });

            modelBuilder.Entity("LocationFinder.Api.Models.Person", b =>
                {
                    b.HasOne("LocationFinder.Api.Models.Organization", "Organization")
                        .WithMany("Persons")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LocationFinder.Api.Models.PointLocation", "PointLocation")
                        .WithOne("Person")
                        .HasForeignKey("LocationFinder.Api.Models.Person", "PointLocatioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
